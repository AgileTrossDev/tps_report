version: '3.8'

services:

  # InfluxDB backing store for system
  timeseries_temperature_db:
    image: influxdb:latest
    container_name: timeseries_temperature_db
    volumes:
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - influxdb_data:/root/.influxdbv2  # Volume for persisting InfluxDB data
    environment:
      - INFLUXDB_DB=temperature
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=my-user
      - DOCKER_INFLUXDB_INIT_PASSWORD=my-password
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_BUCKET=my-bucket
      - DOCKER_INFLUXDB_INIT_RETENTION=0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-admin-token
    restart: always
    ports:
      - "8086:8086"
    networks:
      - tps_network

  # Data source streaming Temperature
  satellite-temperature:
    image: us.gcr.io/loft-orbital-public/hiring/challenges/ground-software/back-end/satellite-temperature
    container_name: satellite-temperature
    ports:
      - "1000:4000"
    networks:
      - tps_network
      
  consumer:
    build:
      context: consumer  
      dockerfile: Dockerfile
    image: tps_consumer_image
    container_name: tps_consumer_app_container
    command: python main.py
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
      - SOURCE_URI=ws://satellite-temperature:4000/graphql
      - INFLUXDB_DB_URL=http://timeseries_temperature_db:8086
      - INFLUXDB_USER=my_user
      - INFLUXDB_USER_PASSWORD=my_password
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - RUNTIME_ENVIRONMENT=DOCKER
    depends_on:
      - timeseries_temperature_db
      - satellite-temperature
    networks:
      - tps_network

  tps:
    build: 
      context: tps_project
      dockerfile: Dockerfile
    image: tps_project_image
    ports:
      - "8000:8000"
    container_name: tps_project_container
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
      - INFLUXDB_URL=http://timeseries_temperature_db:8086
      - INFLUXDB_ORG=my-org
      - INFLUXDB_TOKEN=my-admin-token
      - INFLUXDB_BUCKET=my-bucket
    depends_on:
      - timeseries_temperature_db
    networks:
      - tps_network
  
volumes:
    influxdb_data:  # Define the volume for InfluxDB data persistence

networks:
  tps_network:
    driver: bridge
